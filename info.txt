섹션 1: Introduction
------------------------------
1. What Are You Going To Learn?
------------------------------
2. [THEORY] - Need For WebFlux
------------------------------
3. [DEMO] - Performance Comparison: Web vs WebFlux
------------------------------
4. [THEORY] - Reactive Manifesto
------------------------------
섹션 2: Resources
------------------------------
5. Source Code
------------------------------
섹션 3: Spring WebFlux
------------------------------
6. Introduction
------------------------------
7. How Netty Works
------------------------------
8. Project Setup
------------------------------
9. Simple Math Service - DTO
------------------------------
10. Simple Math Service - Service Class
------------------------------
11. Simple Math Service - Controller
------------------------------
12. Reactive Math Service
------------------------------
13. Reactive Math Controller
------------------------------
14. Reactive Math Service - DEMO
------------------------------
15. WebFlux - Exposing Streaming API
------------------------------
16. What happens when subscriber cancels!
------------------------------
17. Flux API When Streaming Not Enabled
------------------------------
18. Using Reactive Pipeline
------------------------------
19. WebFlux - POST API
------------------------------
20. Request Header
------------------------------
21. Exception Handling - Custom Exception
------------------------------
22. Exception Handling - Controller Advice
------------------------------
23. Exception Handling - Demo
------------------------------
24. Exception Handling - Reactive Error Signal
------------------------------
25. Simple Assignment
------------------------------
26. Assignment Solution
------------------------------
27. Summary
------------------------------
섹션 4: Functional Endpoints
------------------------------
28. Introduction
------------------------------
29. Router Config
------------------------------
30. Router Handler
------------------------------
31. Exposing Flux Via Functional Endpoint
------------------------------
32. Streaming Endpoint
------------------------------
33. POST API
------------------------------
34. Exception Handling
------------------------------
35. Path Based Routing Config
------------------------------
36. Request Predicates
------------------------------
37. Assignment
------------------------------
38. Assignment Solution
------------------------------
39. Summary
------------------------------
섹션 5: WebClient
------------------------------
40. Introduction
------------------------------
41. WebClient Bean
------------------------------
42. GET Mono Endpoint
------------------------------
43. Step Verifier - Quick Refresh
------------------------------
44. GET Mono Refactor
------------------------------
45. GET Flux Endpoint
------------------------------
46. GET Flux Streaming Endpoint
------------------------------
47. POST Request
------------------------------
48. Setting Request Header
------------------------------
49. Handling Bad Request
------------------------------
50. Exchange vs Retrieve
------------------------------
51. Query Params
------------------------------
52. Setting Auth Token
------------------------------
53. Attributes
------------------------------
54. Assignment
------------------------------
55. Assignment Solution
------------------------------
56. Summary
------------------------------
섹션 6: Spring Data Reactive MongoDB
------------------------------
57. High Level Architecture - Reactive Microservices
------------------------------
58. Product-Service - Introduction
------------------------------
59. Note On Spring Data Reactive MongoDB
------------------------------
60. Project Setup
------------------------------
61. [Product-Service] - Packages
------------------------------
62. [Product-Service] - DTO &amp; Entity &amp; Repository
------------------------------
63. [Product-Service] - Entity DTO Util
------------------------------
64. Entity-DTO - Mapper Performance Comparison
------------------------------
65. [Product-Service] - Service Layer - Part 1
------------------------------
66. [Product-Service] - Service Layer - Part 2
------------------------------
67. [Product-Service] - Service Layer - Part 3
------------------------------
68. [Product-Service] - Controller with CRUD Operations
------------------------------
69. [Product-Service] - Application Properties
------------------------------
70. [SpringBoot 2.6 UPDATE]
------------------------------
71. [Product-Service] - CRUD Demo
------------------------------
72. Note On MongoDB
------------------------------
73. Assignment
------------------------------
74. Assignment Solution
------------------------------
75. Installing MongoDB
------------------------------
76. Setting Up MongoDB
------------------------------
77. End To End Testing With MongoDB
------------------------------
78. [Product-Service] - Data Setup
------------------------------
79. Additional Material On Spring Data Reactive MongoDB
------------------------------
섹션 7: Spring Data R2DBC
------------------------------
80. Introduction
------------------------------
81. R2DBC Drivers
------------------------------
82. Note On R2DBC
------------------------------
83. Project Setup
------------------------------
84. [User-Service] - DTO
------------------------------
85. [User-Service] - Entity
------------------------------
86. [User-Service] - Repository
------------------------------
87. [User-Service] - Entity DTO Util
------------------------------
88. [User-Service] - Service Layer
------------------------------
89. [User-Service] - Controller
------------------------------
90. [User-Service] - User Balance Update - R2DBC with @Query
------------------------------
91. [User-Service] - Transaction DTO Util
------------------------------
92. [User-Service] - Transaction Service
------------------------------
93. Transaction Management
------------------------------
94. [User-Service] - Transaction Controller
------------------------------
95. R2DBC Drivers
------------------------------
96. R2DBC Properties
------------------------------
97. Tables Creation
------------------------------
98. [User-Service] - CRUD DEMO
------------------------------
99. [User-Service] - DELETE User Issue Fix
------------------------------
100. Assignment
------------------------------
101. Assignment Solution
------------------------------
102. [OPTIONAL] - Postgres Install
------------------------------
103. [OPTIONAL] R2DBC With Postgres
------------------------------
섹션 8: Reactive Microservices
------------------------------
104. Introduction
------------------------------
105. Project Setup
------------------------------
106. [Order-Service] - Packages
------------------------------
107. [Order-Service] - DTO
------------------------------
108. DTO Best Practices
------------------------------
109. [Order-Service] - Entity
------------------------------
110. [Order-Service] - Repository
------------------------------
111. [Order-Service] - Application Properties
------------------------------
112. [Order-Service] - Product Client
------------------------------
113. [Order-Service] - User Client
------------------------------
114. [Order-Service] - Order Fulfillment Service - Part 1
------------------------------
115. [Order-Service] - Order Fulfillment Service - Part 2
------------------------------
116. [Order-Service] - Order Fulfillment Service - Part 3
------------------------------
117. [Order-Service] - Order Fulfillment Service - Part 4
------------------------------
118. [Order-Service] - Controller
------------------------------
119. [Order-Service] - Order Query Service
------------------------------
120. [Order-Service] - DEMO
------------------------------
121. [RESILIENT] - Handling Service Unavailability
------------------------------
122. [RESILIENT] - Handling Intermittent Service Issues Part 1
------------------------------
123. [RESILIENT] - Handling Intermittent Service Issues Part 2
------------------------------
124. Resilient Design Patterns
------------------------------
125. Assignment
------------------------------
126. Assignment Solution
------------------------------
섹션 9: Server Sent Events (SSE)
------------------------------
127. Introduction
------------------------------
128. Sink Config
------------------------------
129. Pushing Item Via Sink
------------------------------
130. Exposing Event Stream
------------------------------
131. Streaming API DEMO
------------------------------
132. Bootstrap Links
------------------------------
133. Creating Front-End - Part 1
------------------------------
134. Creating Front-End - Part 2
------------------------------
135. Price Filter Implementation
------------------------------
136. SSE - DEMO
------------------------------
섹션 10: Unit / Integration Testing
------------------------------
137. WebTestClient - Introduction
------------------------------
138. Creating Simple Test with WebTestClient
------------------------------
139. Fluent Assertion
------------------------------
140. @WebFluxTest
------------------------------
141. Why Mocking?
------------------------------
142. List Response
------------------------------
143. Streaming Response
------------------------------
144. Passing Parameters
------------------------------
145. Post Test
------------------------------
146. Controller Advice
------------------------------
147. Router Function
------------------------------
148. WebTestClient - Bind To Server
------------------------------
149. Summary
------------------------------
섹션 11: Reactive Course Series
------------------------------
150. Reactive Course Series
------------------------------
섹션 12: Thank You
------------------------------
151. Thank You!
------------------------------
섹션 13: Bonus Section / Articles
------------------------------
152. R2DBC - Entity Callback
------------------------------
153. Spring WebFlux - File Upload Example
------------------------------
154. Spring WebFlux Security
------------------------------
